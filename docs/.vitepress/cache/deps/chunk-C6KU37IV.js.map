{
  "version": 3,
  "sources": ["../../../../node_modules/ranui/dist/colz-746223ab.js"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst round = Math.round;\nclass Rgb {\n  constructor(col) {\n    __publicField(this, \"r\");\n    __publicField(this, \"g\");\n    __publicField(this, \"b\");\n    this.r = col[0];\n    this.g = col[1];\n    this.b = col[2];\n  }\n  toString() {\n    return `rgb(${this.r},${this.g},${this.b})`;\n  }\n}\nclass Rgba extends Rgb {\n  constructor(col) {\n    super(col);\n    __publicField(this, \"a\");\n    this.a = col[3];\n  }\n  toString() {\n    return `rgba(${this.r},${this.g},${this.b},${this.a})`;\n  }\n}\nclass Hsl {\n  constructor(col) {\n    __publicField(this, \"h\");\n    __publicField(this, \"s\");\n    __publicField(this, \"l\");\n    this.h = col[0];\n    this.s = col[1];\n    this.l = col[2];\n  }\n  toString() {\n    return `hsl(${this.h},${this.s}%,${this.l}%)`;\n  }\n}\nclass Hsla extends Hsl {\n  constructor(col) {\n    super(col);\n    __publicField(this, \"a\");\n    this.a = col[3];\n  }\n  toString() {\n    return `hsla(${this.h},${this.s}%,${this.l}%,${this.a})`;\n  }\n}\nclass Color {\n  constructor(r, g = 0, b = 0, a = 1) {\n    __publicField(this, \"r\");\n    __publicField(this, \"g\");\n    __publicField(this, \"b\");\n    __publicField(this, \"a\");\n    __publicField(this, \"rgb\");\n    __publicField(this, \"rgba\");\n    __publicField(this, \"hex\");\n    __publicField(this, \"hsl\");\n    __publicField(this, \"hsla\");\n    __publicField(this, \"h\");\n    __publicField(this, \"s\");\n    __publicField(this, \"l\");\n    if (typeof r === \"string\") {\n      let str = r;\n      if (str.charAt(0) !== \"#\") {\n        str = \"#\" + str;\n      }\n      if (str.length < 7) {\n        str = \"#\" + str[1] + str[1] + str[2] + str[2] + str[3] + str[3];\n      }\n      [r, g, b] = hexToRgb(str);\n    } else if (r instanceof Array) {\n      a = r[3] || a;\n      b = r[2];\n      g = r[1];\n      r = r[0];\n    }\n    this.r = Number(r);\n    this.g = Number(g);\n    this.b = Number(b);\n    this.a = a;\n    this.rgb = new Rgb([this.r, this.g, this.b]);\n    this.rgba = new Rgba([this.r, this.g, this.b, this.a]);\n    this.hex = rgbToHex(this.r, this.g, this.b);\n    this.hsl = new Hsl(rgbToHsl(this.r, this.g, this.b));\n    this.h = this.hsl.h;\n    this.s = this.hsl.s;\n    this.l = this.hsl.l;\n    this.hsla = new Hsla([this.h, this.s, this.l, this.a]);\n  }\n  setHue(newHue) {\n    this.h = newHue;\n    this.hsl.h = newHue;\n    this.hsla.h = newHue;\n    this.updateFromHsl();\n  }\n  setSat(newSat) {\n    this.s = newSat;\n    this.hsl.s = newSat;\n    this.hsla.s = newSat;\n    this.updateFromHsl();\n  }\n  setLum(newLum) {\n    this.l = newLum;\n    this.hsl.l = newLum;\n    this.hsla.l = newLum;\n    this.updateFromHsl();\n  }\n  setAlpha(newAlpha) {\n    this.a = newAlpha;\n    this.hsla.a = newAlpha;\n    this.rgba.a = newAlpha;\n  }\n  updateFromHsl() {\n    this.rgb = new Rgb(hslToRgb(this.h, this.s, this.l));\n    this.r = this.rgb.r;\n    this.g = this.rgb.g;\n    this.b = this.rgb.b;\n    this.rgba.r = this.rgb.r;\n    this.rgba.g = this.rgb.g;\n    this.rgba.b = this.rgb.b;\n    this.hex = rgbToHex([this.r, this.g, this.b]);\n  }\n}\nconst hexToRgb = function(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [\n    parseInt(result[1], 16),\n    parseInt(result[2], 16),\n    parseInt(result[3], 16)\n  ] : null;\n};\nconst getDarkColor = (color, level) => {\n  const rgbc = hexToRgb(color) || [];\n  for (let i = 0; i < 3; i++)\n    rgbc[i] = Math.floor(Number(rgbc[i]) * (1 - level));\n  return rgbToHex(rgbc[0], rgbc[1], rgbc[2]);\n};\nfunction getLightColor(color, level) {\n  const rgbc = hexToRgb(color) || [];\n  for (let i = 0; i < 3; i++)\n    rgbc[i] = Math.floor((255 - Number(rgbc[i])) * level + Number(rgbc[i]));\n  return rgbToHex(rgbc[0], rgbc[1], rgbc[2]);\n}\nconst componentToHex = function(c) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n};\nconst rgbToHex = function(r, g = 0, b = 0) {\n  if (r instanceof Array) {\n    b = r[2];\n    g = r[1];\n    r = r[0];\n  }\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n};\nconst rgbToHsl = function(r, g = 0, b = 0) {\n  if (r instanceof Array) {\n    b = r[2];\n    g = r[1];\n    r = r[0];\n  }\n  let s, l, d, h = 0;\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  l = (max + min) / 2;\n  if (max === min) {\n    h = s = 0;\n  } else {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  h = round(h * 360);\n  s = round(s * 100);\n  l = round(l * 100);\n  return [h, s, l];\n};\nconst hue2rgb = function(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n};\nconst hslToRgb = function(h, s, l) {\n  if (h instanceof Array) {\n    l = h[2];\n    s = h[1];\n    h = h[0];\n  }\n  h = Number(h) / 360;\n  s = Number(s) / 100;\n  l = Number(l) / 100;\n  let r, g, b, q, p;\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return [round(r * 255), round(g * 255), round(b * 255)];\n};\nexport {\n  Color as C,\n  getDarkColor as a,\n  getLightColor as g\n};\n"],
  "mappings": "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",
  "names": []
}
